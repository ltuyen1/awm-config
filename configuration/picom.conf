shadow = true;
shadow-radius = 20;
shadow-opacity = 0.7;
shadow-offset-x = -20;
shadow-offset-y = -20;
shadow-color = "#000000";
xinerama-shadow-crop = true;
shadow-ignore-shaped = false;
detect-rounded-corners = false
shadow-exclude = [
  "name = 'Notification'",
  "class_g ?= 'Notify-osd'",
  "class_g = 'Conky'",
  "window_type = 'dock'",
  "class_g = 'Cairo-clock'",
  "window_type *= 'menu'",
  "window_type = 'utility'",
  "name = 'rofi'",
  "window_type = 'dropdown_menu'",
  "window_type = 'popup_menu'"
];

fading = true;
fade-in-step = 0.1;
fade-out-step = 0.1;
# fade-delta = 3;
fade-exclude = [];
no-fading-openclose = false;
no-fading-destroyed-argb = true;

inactive-opacity = 1;
frame-opacity = 1.0;
inactive-opacity-override = false;
active-opacity = 1.0;
inactive-dim = 0.0;
focus-exclude = [
  #"class_g ?= 'rofi'"
  #'_NET_WM_NAME@:s = "rofi"'
  "class_g ?= 'slop'",
  "name = 'rofi'",
  "class_g ?= 'Steam'",
  "_NET_WM_WINDOW_TYPE@:a *= 'MENU'",
  "window_type *= 'menu'",
  "window_type = 'utility'",
  "window_type = 'dock'",
  "window_type = 'dropdown_menu'",
  "window_type = 'popup_menu'"
];

# Sets the radius of rounded window corners. When > 0, the compositor will
# round the corners of windows. Does not interact well with
# `transparent-clipping`.
corner-radius = 0

# Exclude conditions for rounded corners.
rounded-corners-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'",
  "class_g ?= 'rofi'",
  "class_g ?= 'awesome'"
];

# Enable remote control via D-Bus. See the man page for more details.
dbus = true

# Daemonize process. Fork to background after initialization. Causes issues with certain (badly-written) drivers.
daemon = true

# Specify the backend to use: `xrender`, `glx`, `egl` or `xr_glx_hybrid`.
backend = "xrender";

# Use higher precision during rendering, and apply dither when presenting the
# rendered screen. Reduces banding artifacts, but might cause performance
# degradation. Only works with OpenGL.
dithered-present = false;

# Enable/disable VSync.
vsync = false;

# Try to detect WM windows (a non-override-redirect window with no
# child that has 'WM_STATE') and mark them as active.
#
# mark-wmwin-focused = false
mark-wmwin-focused = true;

# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.
# mark-ovredir-focused = false
mark-ovredir-focused = true;

# Try to detect windows with rounded corners and don't consider them
# shaped windows. The accuracy is not very high, unfortunately.
#
# detect-rounded-corners = false
detect-rounded-corners = true;

# Detect '_NET_WM_WINDOW_OPACITY' on client windows, useful for window managers
# not passing '_NET_WM_WINDOW_OPACITY' of client windows to frame windows.
#
# detect-client-opacity = false
detect-client-opacity = true;

# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows
# in the same group focused at the same time.
#
# detect-transient = false
detect-transient = true;

# GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer.
# Might cause incorrect opacity when rendering transparent content (but never
# practically happened) and may not work with blur-background.
# My tests show a 15% performance boost. Recommended.
#
glx-no-stencil = true;

# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes,
# but is known to break things on some drivers (LLVMpipe, xf86-video-intel, etc.).
# Recommended if it works.
#
glx-no-rebind-pixmap = true

# Disable the use of damage information.
# This cause the whole screen to be redrawn every time, instead of the part of the screen
# has actually changed. Potentially degrades the performance, but might fix some artifacts.
# The opposing option is use-damage
#
# no-use-damage = false
use-damage = false;

wintypes:
{
  tooltip = { fade = true; full-shadow = true; focus = true; blur-background = false;};
  menu = { full-shadow = true;};
  popup_menu =  { full-shadow = true;};
  utility =  {full-shadow = true;};
  toolbar = {full-shadow = true;};
  normal = {full-shadow = true;};
  notification = {full-shadow = true;};
  dialog = {full-shadow = true};
  desktop = { shadow = false; blur-background = false; };
  dropdown_menu = { full-shadow = true;};
};
